<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace PWCode\eBaySDK\RelatedItemsManagement\Services;

class RelatedItemsManagementService extends \PWCode\eBaySDK\RelatedItemsManagement\Services\RelatedItemsManagementBaseService
{
    const API_VERSION = '1.0.0';

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\CreateBundlesRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\CreateBundlesResponse
     */
    public function createBundles(\PWCode\eBaySDK\RelatedItemsManagement\Types\CreateBundlesRequest $request)
    {
        return $this->createBundlesAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\CreateBundlesRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createBundlesAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\CreateBundlesRequest $request)
    {
        return $this->callOperationAsync(
            'createBundles',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\CreateBundlesResponse'
        );
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\FindBundlesRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\FindBundlesResponse
     */
    public function findBundles(\PWCode\eBaySDK\RelatedItemsManagement\Types\FindBundlesRequest $request)
    {
        return $this->findBundlesAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\FindBundlesRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function findBundlesAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\FindBundlesRequest $request)
    {
        return $this->callOperationAsync(
            'findBundles',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\FindBundlesResponse'
        );
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\GetBundlesRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\GetBundlesResponse
     */
    public function getBundles(\PWCode\eBaySDK\RelatedItemsManagement\Types\GetBundlesRequest $request)
    {
        return $this->getBundlesAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\GetBundlesRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getBundlesAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\GetBundlesRequest $request)
    {
        return $this->callOperationAsync(
            'getBundles',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\GetBundlesResponse'
        );
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundlesRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundlesResponse
     */
    public function updateBundles(\PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundlesRequest $request)
    {
        return $this->updateBundlesAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundlesRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateBundlesAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundlesRequest $request)
    {
        return $this->callOperationAsync(
            'updateBundles',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundlesResponse'
        );
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundleStatusRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundleStatusResponse
     */
    public function updateBundleStatus(\PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundleStatusRequest $request)
    {
        return $this->updateBundleStatusAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundleStatusRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateBundleStatusAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundleStatusRequest $request)
    {
        return $this->callOperationAsync(
            'updateBundleStatus',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\UpdateBundleStatusResponse'
        );
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\DeleteBundlesRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\DeleteBundlesResponse
     */
    public function deleteBundles(\PWCode\eBaySDK\RelatedItemsManagement\Types\DeleteBundlesRequest $request)
    {
        return $this->deleteBundlesAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\DeleteBundlesRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteBundlesAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\DeleteBundlesRequest $request)
    {
        return $this->callOperationAsync(
            'deleteBundles',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\DeleteBundlesResponse'
        );
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\GetVersionRequest $request
     * @return \PWCode\eBaySDK\RelatedItemsManagement\Types\GetVersionResponse
     */
    public function getVersion(\PWCode\eBaySDK\RelatedItemsManagement\Types\GetVersionRequest $request)
    {
        return $this->getVersionAsync($request)->wait();
    }

    /**
     * @param \PWCode\eBaySDK\RelatedItemsManagement\Types\GetVersionRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getVersionAsync(\PWCode\eBaySDK\RelatedItemsManagement\Types\GetVersionRequest $request)
    {
        return $this->callOperationAsync(
            'getVersion',
            $request,
            '\PWCode\eBaySDK\RelatedItemsManagement\Types\GetVersionResponse'
        );
    }
}
